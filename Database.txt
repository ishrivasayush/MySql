what is database?
a collection of data hold this data in the form of a table.
it provides the capability to access and manipulate the data.

what is a Table?
holds the data in the from of rows and columns, it is similar to spredsheet.

Types

relational Database
->rows/columns related Tables
-> sql server, Mysql,postress

No-sql Database 
-> key vlaues, documnets, graph
cassendra, hbase, mongodb

Structured query Language
-> sql
->used to query relational database.
->It is a Language that is used to communicate with database.

Mysql vs Sql
Mysql is a RDBMS which holds the data.
Sql is a lnaguage which is used to query relational database.

CRUD
create->insert command
Read-> select
update-> update
delate-delete

Database
________________________________________________________

show databases;
create database narainox;
use narainox;
drop database narainox;
show databases;
select database();

Tables
_______________________________________________________

create table employee(
name varchar(25),
age int,
salary float
);
show tables;
desc employee;
describe employee;
drop table employee;

Craete tables and Insertion
_________________________________________________________
create table employee(
firstname varchar(20),
middlename varchar(20),
lastname varchar(20),
age int,
salary int,
location varchar(20)
);

select * from employee;

INSERT INTO employee VALUES(
    'Ayush',
    'Narayan',
    'Shrivastava',
    25,
    54500,
    'Kanpur'
);

INSERT INTO employee(firstname,middlename,lastname,age,salary,location) VALUES('Abhay',
    'Narayan',
    'Shrivastava',
    29,
    54500,
    'banglore'
);

\\ special symbols
INSERT INTO employee(firstname,lastname,age,salary,location) VALUES('Abhinav',
    'Shrivastava',
    33,
    54500,
    'banglore'
);

// ' ''
 INSERT INTO employee(firstname,lastname,age,salary,location) VALUES('Abhina\'v',
    'Shrivastava',
    33,
    54500,
    'banglore'
);

//Multiple Records
 INSERT INTO employee(firstname,lastname,age,salary,location) VALUES("Abhina'v",
    'Shrivastava',
    33,
    54500,
    'banglore'
),("Abhina'v",
    'Shrivastava',
    33,
    54500,
    'banglore'),
    ("Abhina'v",
    'Shrivastava',
    33,
    54500,
    'banglore'
);

NULL
// NULL VALUES
nothing

NOT NULL
->not NULL vlaues are contained in the column

create table employee(
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL
);

Defalut vlaues
_______________________________________________________

set the Defalut vlaues for column if we are not giving the vleues than it set as Defalut value on it.

create table employee(
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
);

INSERT INTO employee(firstname,lastname,age,salary) VALUES('Abhinav',
    'Shrivastava',
    33,
    54500);

INSERT INTO employee(firstname,lastname,age,salary,location) VALUES('Abhinav',
    'Shrivastava',
    33,
    54500,
    null);

Combination of NOT NULL and Default
->
create table employee(
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
);

Primary key
-> uniquly identify the each record in the table.
-> For a primary key NULL is not allowed and also a repeted values are not allowed.


create table employee(
id INT, 
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
);


create table employee(
id INT PRIMARY KEY, 
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
);

create table employee(
id INT, 
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
PRIMARY KEY(id)
);

//Composite primary key

create table employee(
id INT, 
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
PRIMARY KEY(id,name)
);

//AUTOINCREMENT

create table employee(
id INT AUTO_INCREMENT, 
firstname varchar(20) NOT NULL,
middlename varchar(20),
lastname varchar(20) NOT NULL,
age int NOT NULL,
salary int NOT NULL,
location varchar(20) NOT NULL Default 'Banglore'
PRIMARY KEY(id,name)
);

//UNIQUE KEY
-> you can have only one primary key and primary key cannot hold any NULL
we should use primary ket whwn we have to uniquely identify each record
->unique key can hold NULL
->so the puspose of unique key is to make  sure the values do not have duplicate.
->we can have only one primary key but multiple unique keys in a table.
 
Reading the data

select all the columns
select * from TableName

select by columnnames
select firstname,lastname from Tbalename

select by applying a where clause (filter condition) 
select * from where age>29;

Bydefalut it is case insensitive
select * from employee where firstname='Ayush';

Making case senstive
select * from employee where BINARY firstname='Ayush';

// Alias
as

select firstname as name from employee;


//Update- data muniplication 
____________________________________

update employee set lname='Sinha' where id=3;
update employee set lname='Sinha';
update employee set salary=salary+5600;

//Delete
____________________________________
Delete from employee where id=3;
Delete from employee;

//Alter
_____________________________________
Alter is to alter the structure of the table.

Alter table employee add column role varchar(20);
Alter table employee drop column role;
Alter table employee modify column fname varchar(30);
Alter table employee drop primary key;
Alter table employee add primary key(id);

DDL vs DML
____________________________________
Data definition Language
->deals with table structure
-> craete,alter,drop

Data manipulation Language
->deals with the data directly
->insert, update ,delete 
 
//removes all the records
delete from  employee; -> DML
-> delete the records one by one
->slow

//removes all the records 
Truncate table employee; -> DDL 
-> internally drop the table and recreates it.
-> fast

Constraints
->
are used to limit the type of data that can go into table.

Forign key
-> A foreign key is a field in a one table that refers to the primary key of another table.

selectedCourse is a foreign key in student table that refers to course_id (primary key)  in course table.
__________________________________________________
create table student(
    studentId INT AUTO_INCREMENT,
    studentFName varchar(20) NOT NULL,
    studentMName varchar(20),
    studentLName varchar(20) NOT NULL,
    studentEmail varchar(30) NOT NULL,
    studentPhone varchar(30) NOT NULL,
    studentAlternatePhone varchar(30),
    enrollmentDate timestamp DEFAULT CURRENT_TIMESTAMP() NOT NULL,
    yearOfExperience INT NOT NULL,
    studentCompany varchar(30),
    batchDate varchar(30) NOT NULL,
    SourceOfJoining varchar(30) NOT NULL,
    location varchar(30) NOT NULL,
    PRIMARY KEY(studentId),
    unique KEY(studentEmail),
    Forign KEY(selectedCourse) References course(courseId)
);


desc student;
INSERT INTO student(studentFName,studentLName,studentEmail,
studentPhone,yearOfExperience,
studentCompany,batchDate,SourceOfJoining,location) VALUES('Ayush','Shrivastava','ayushrivastava2k3@gmail.com',
'7355026076',3,'Infosys','2023-6-23','Linkedin','Kanpur');


create table course(
    courseId INT NOT NULL,
    courseName varchar(30)
    NOT NULL,
    courseDurationMonth INT NOT NULL,
    courseFee INT NOT NULL,
    PRIMARY KEY(courseId),
    
);

INSERT INTO student(studentFName,studentLName,studentEmail,
studentPhone,selectedCourse,yearOfExperience,
studentCompany,batchDate,SourceOfJoining,location) VALUES('Ayush','Shrivastava','ayushriastava26@gmail.com',
'7355026076',5,3,'Infosys','2023-6-23','Linkedin','Kanpur');

course Table -Parent we can't delete the record if it is exits in child table; 
Student Table -child

Distinct
____________________________________
Only gives the unique values;

Gives redudent data.
->select location from student;

unique values only.
->select DISTINCT location from student;
->select distinct  studentCompany from student;

ORDER By
==========

for odering like sorting
bydefault in Accending ORDER
desc;
-Decnding Order

->select studentFName from student ORDER by studentFName;
->select studentFName from student ORDER by yearOfExperience desc;
->select studentFName from student ORDER by 1 desc;

->select studentFName from student ORDER by 1,2;
fisrt level sorting than second level sorting.

limit
======
set the limit of data;

->select * from student limit 3;

get 3 candidate with least yearOfExperience;

->select * from student order by yearOfExperience limit 3;

want to know from which sources last 5 candidate have enrollmentDate

->select  SourceOfJoining from student order by enrollmentDate desc limit 5;
->select  DISTINCT SourceOfJoining from student order by enrollmentDate desc limit 5;

last candidate
->select * from student order by enrollmentDate desc limit 1;


->select * from student order by enrollmentDate desc limit 0,3;
-------last 3


create database student_records;
use student_records;
create table student_records(id int,firstName varchar(50),lastName varchar(50),address text,city varchar(50));

describe student_records;
desc student_records;
show columns from student_records;

show databases;
show tables;
select database();

Alter table student_records Add column contact varchar(10);
Alter table student_records Add column email varchar(20);
alter table student_records modify column contact varchar(12);
Alter table student_records drop column contact;
Alter table student_records add  primary key(id);

create table student(id int, name varchar(10),city varchar(10));
drop table student;
truncate table student_records;

insert into student_records values(8,'abhay','Shrivastava','kidwai nagar','kanpur','ishriayush@gmail.com');
insert into student_records(id,firstName,lastName,address,city,email) values(3,'abhay','Shrivastava','kidwai nagar','kanpur','ishriayush@gmail.com');

update  student_records set firstName='Aditi' where  id=2;
update  student_records set firstName='Aditi';

delete from student_records where id=3;
delete from student_records;

select * from student_records;
select distinct firstName from student_records;

select * from student_records where id <> 1;
select * from student_records where id>6;
select * from student_records where id<6;
select * from student_records where id<=6;
select * from student_records where id>=6;




